variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - deploy
  - ana

image: registry.gitlab.com/ody5-dev/docker/jupyterlab:ana

pages:
  stage: deploy
  variables:
    CLONE_URL: ${CI_SERVER_HOST}/${CI_PROJECT_ROOT_NAMESPACE}
  allow_failure: true
  before_script:
    - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@${CLONE_URL}/ana.git ana
    - cd ana && python -m pip install -e . && cd ..
    - cd docs/modules && git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@${CLONE_URL}/FORC-data.git forc && cd ../..
    - mv source/onenote/html docs/_static/html
    - mv source/onenote/word docs/_static/word
  script:
    - make clean html && make html
    - mv _build/html public
  artifacts:
    paths:
      - public
  only:
    - main
    - release/*

ana:prepair:
  stage: ana
  variables:
    CLONE_URL: ${CI_SERVER_HOST}/${CI_PROJECT_ROOT_NAMESPACE}
  variables:
    TEST_DIR: tests/ana/prepair
  before_script:
    - git clone --recursive http://gitlab-ci-token:${CI_JOB_TOKEN}@${CLONE_URL}/ana.git ana
    - python -m pip install git+http://gitlab-ci-token:${CI_JOB_TOKEN}@${CLONE_URL}/spectrumanalyzer.git
    - cd ana && python -m pip install -e . && cd ..
    - python -m pip install coverage
    - cd ana
    - mkdir output
  script:
    - coverage run -m unittest discover -s $TEST_DIR
    - coverage report -m
  artifacts:
    paths:
      - output
  only:
    - main
    - develop

ana:fit:
  extends: ana:prepair
  variables:
    TEST_DIR: tests/ana/fit

ana:visualize:
  extends: ana:prepair
  variables:
    TEST_DIR: tests/ana/visualize
